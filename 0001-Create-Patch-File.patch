From 578be6f4184ece3049a313e8b2958f82df707b4f Mon july 17 00:00:00 2024
From: Deepikashetty <deepikashetty2020@gmail.com>
Date: Sat, 13 july 2024 18:52:23 +0200
Subject: [PATCH] Create Patch File

---
 src/0001-Task-3-revert-debug.patch | 138 -----------------------------
 1 file changed, 138 deletions(-)
 delete mode 100644 src/0001-Task-3-revert-debug.patch

diff --git a/src/0001-Task-3-revert-debug.patch b/src/0001-Task-3-revert-debug.patch
deleted file mode 100644
index 53e2d98..0000000
--- a/src/0001-Task-3-revert-debug.patch
+++ /dev/null
@@ -1,138 +0,0 @@
-From c39afc3963bd7452157823088db8bbcbb03fb223 Mon Sep 17 00:00:00 2001
-From: bshongwe <dru.da.beat.hustle@gmail.com>
-Date: Sat, 17 Feb 2024 01:37:54 +0200
-Subject: [PATCH] Task 3: revert debug
-
----
- src/Graph.tsx | 103 +++++++++++++++++++++++---------------------------
- 1 file changed, 48 insertions(+), 55 deletions(-)
-
-diff --git a/src/Graph.tsx b/src/Graph.tsx
-index 4679806..02964a5 100644
---- a/src/Graph.tsx
-+++ b/src/Graph.tsx
-@@ -1,73 +1,66 @@
--import React, { Component } from 'react';
--import { Table } from '@finos/perspective';
--import { ServerRespond } from './DataStreamer';
--import { DataManipulator } from './DataManipulator';
-+import React, {Component} from 'react';
-+import {Table, TableData} from '@finos/perspective';
-+import {ServerRespond} from './DataStreamer';
-+import {DataManipulator} from './DataManipulator';
- import './Graph.css';
- 
- interface IProps {
--  data: ServerRespond[],
-+    data: ServerRespond[],
- }
- 
- interface PerspectiveViewerElement extends HTMLElement {
--  load: (table: Table) => void,
-+    load: (table: Table) => void,
- }
-+
- class Graph extends Component<IProps, {}> {
--  table: Table | undefined;
-+    table: Table | undefined;
- 
--  render() {
--    return React.createElement('perspective-viewer');
--  }
-+    render() {
-+        return React.createElement('perspective-viewer');
-+    }
- 
--  componentDidMount() {
--    // Get element from the DOM.
--    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
-+    componentDidMount() {
-+        // Get element from the DOM.
-+        const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
- 
--    const schema = {
--      //stock: 'string',
--      price_abc: 'float',
--      price_def: 'float',
--      ratio: 'float',
--      //top_ask_price: 'float',
--      //top_bid_price: 'float',
--      timestamp: 'date',
--      upper_bound: 'float',
--      lower_bound: 'float',
--      trigger_alert: 'float',
--    };
-+        const schema = {
-+            price_abc: 'float',
-+            price_def: 'float',
-+            ratio: 'float',
-+            timestamp: 'date',
-+            upper_bound: 'float',
-+            lower_bound: 'float',
-+            trigger_alert: 'float'
-+        };
- 
--    if (window.perspective && window.perspective.worker()) {
--      this.table = window.perspective.worker().table(schema);
-+        if (window.perspective && window.perspective.worker()) {
-+            this.table = window.perspective.worker().table(schema);
-+        }
-+        if (this.table) {
-+            // Load the `table` in the `<perspective-viewer>` DOM reference.
-+            elem.load(this.table);
-+            elem.setAttribute('view', 'y_line');
-+            elem.setAttribute('row-pivots', '["timestamp"]');
-+            elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
-+            elem.setAttribute('aggregates', JSON.stringify({
-+                price_abc: 'avg',
-+                price_def: 'avg',
-+                ratio: 'avg',
-+                timestamp: 'distinct count',
-+                upper_bound: 'avg',
-+                lower_bound: 'avg',
-+                trigger_alert: 'avg'
-+            }));
-+        }
-     }
--    if (this.table) {
--      // Load the `table` in the `<perspective-viewer>` DOM reference.
--      elem.load(this.table);
--      elem.setAttribute('view', 'y_line');
--      elem.setAttribute('column-pivots', '["stock"]');
--      elem.setAttribute('row-pivots', '["timestamp"]');
--      elem.setAttribute('columns', '["top_ask_price"]');
--      elem.setAttribute('aggregates', JSON.stringify({
--        //stock: 'distinctcount',
--	price_abc: 'avg',
--	price_def: 'avg',
--	ratio: 'avg',
--        //top_ask_price: 'avg',
--        //top_bid_price: 'avg',
--        timestamp: 'distinct count',
--	upper_bound: 'avg',
--	lower_bound: 'avg',
--	trigger_alert: 'avg',
--      }));
--    }
--  }
- 
--  componentDidUpdate() {
--    if (this.table) {
--        this.table.update([
--	    DataManipulator.generateRow(this.props.data),
--        ] as unknown as TableData);
-+    componentDidUpdate() {
-+        if (this.table) {
-+            this.table.update([
-+                DataManipulator.generateRow(this.props.data),
-+            ] as unknown as TableData);
-+        }
-     }
--  }
--
- }
- 
- export default Graph;
--- 
-2.43.0.windows.1
-
-- 
2.43.0.windows.1

